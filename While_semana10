#Funcion que retorne una lista de las letras de la 'z' a la 'a'

def de_la_z_a_la_a():
    '''

    ()-> list of str

    >>> de_la_z_a_la_a()
    ['z', 'y', 'x', 'w', 'v', 'u', 't', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'l', 'k', 'j', 'i', 'h', 'g', 'f', 'e', 'd', 'c', 'b', 'a']

    :return:
    '''

    resultado = []
    contador = 122
    while contador > 96:
        resultado.append(chr(contador))
        contador -= 1
    return resultado
    
    #Funcion que encuentre la suma de todos los numeros pares, dado un rango

def suma_pares(inferior, superior):
    '''

    (int, int) -> int


    >>> suma_pares(0,10)
    30

    >>> suma_pares(2,5)
    6

    :param num1:
    :param num2:
    :return:
    '''

    acomulador = 0
    contador = inferior
    while contador <= superior:
        if contador%2 == 0:
            acomulador += contador
        contador +=1
    return acomulador
    
    #Funcion que cuente los digitos en un numero

def digitos(numero):
    '''

    (int) -> int


    >>> digitos(10)
    2

    >>> digitos(1967)
    4

    >>> digitos(-20)
    2

    >>> digitos(0)
    1

    :param numero:
    :return:
    '''

    contador = 1
    copia = abs(numero)
    while copia >= 10:
        contador += 1
        copia //= 10
    return contador
    
    #Funcion que sume  los digitos de un numero
    
    def sume_digitos(numero):
    '''

    >>> sume_digitos(10)
    1

    :param numeros:
    :return:
    '''

    acomulador = 1
    copia = abs(numero)
    while copia > 10:
        acomulador += copia %10
        acomulador > 0
    return acomulador
    
    #Funcion que genere una lista con los digitos de un numero
    
    def lista_digitos(numero):
    """
    (int) -> int

    Cuenta el numero de digitos dado un entero

     >>> lista_digitos(10)
    [1, 0]

    >>> lista_digitos(1967)
    [1, 9, 6, 7]

    >>> lista_digitos(-20)
    [-2, 0]

    >>> lista_digitos(0)
    [0]
     :param numero:
    :return:
    """

    if numero == 0:
        return [0]
    acumulador = []
    bandera_neg = numero < 0
    copia = abs(numero)
    while copia > 0:
        acumulador.insert(0, copia % 10)
        copia //= 10
    if bandera_neg:
        acumulador[0] *= -1
    return acumulador
    
    
    #Hacer un programa que le pregunte al usuario numeros, si el usuario ingresa uan palabra debe terminar la ejecucion
    while, try
    break
    
    while True:
    num = input("Ingrese un numero")
    try:
        num = float(num)
        print(num)
    except:
        break
print("Dejo de insertar numeros")
